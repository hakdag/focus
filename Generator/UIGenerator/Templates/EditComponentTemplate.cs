// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace UIGenerator.Templates
{
    using Focus.Common.Attributes;
    using System.ComponentModel.DataAnnotations;
    using System.Reflection;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class EditComponentTemplate : EditComponentTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"import { Component, ViewEncapsulation, Input, OnInit } from '@angular/core';
import { Router, ActivatedRoute, Params }   from '@angular/router';
import 'rxjs/add/operator/switchMap';
import { Select2TemplateFunction, Select2OptionData } from 'ng2-select2';
import { __platform_browser_private__ } from '@angular/platform-browser';
import 'rxjs/add/operator/toPromise';
import { BaseEditComponent } from 'app/core/BaseEditComponent';

import { ResponseResult } from '../../core/ResponseResult';
import { ");
            
            #line 18 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write(" } from \'./");
            
            #line 18 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("\';\r\nimport { ");
            
            #line 19 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("Service } from \'./");
            
            #line 19 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write(".service\';\r\n");
            
            #line 20 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 foreach (var import in imports)
{ 
            
            #line default
            #line hidden
            
            #line 22 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(import.Value));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 23 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n@Component({\r\n    selector: \'");
            
            #line 26 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("-edit\',\r\n    templateUrl: \'./");
            
            #line 27 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("-edit.template.html\',\r\n    styleUrls: [\'../../forms/elements/elements.style.scss\'" +
                    ", \'../../ui-elements/notifications/notifications.style.scss\'],\r\n    providers: [" +
                    "\r\n\t\t");
            
            #line 30 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("Service");
            
            #line 30 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 if (providers != null && providers.Any()){ 
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 30 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 31 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 for (int i = 0; i < providers.Count(); i++)
		{ 
			var provider = providers[i]; 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 34 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(provider));
            
            #line default
            #line hidden
            this.Write("Service");
            
            #line 34 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 if (i < providers.Count() - 1) { 
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 34 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 35 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ");
            
            #line 39 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("EditComponent extends BaseEditComponent<");
            
            #line 39 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("> {\r\n\t");
            
            #line 40 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 foreach (var item in listProperties)
    { 
            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 42 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List: ");
            
            #line 42 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write("[];\r\n    ");
            
            #line 43 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("    datepickerOpts = { }\r\n    constructor(\r\n        protected ");
            
            #line 46 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service: ");
            
            #line 46 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("Service,\r\n\t\t");
            
            #line 47 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 for (int i = 0; i < providers.Count(); i++)
		{ 
			var provider = providers[i]; 
            
            #line default
            #line hidden
            this.Write("\t\t\tprivate ");
            
            #line 50 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(provider.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service: ");
            
            #line 50 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(provider));
            
            #line default
            #line hidden
            this.Write("Service,\r\n\t\t");
            
            #line 51 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        protected route: ActivatedRoute,\r\n        protected router: Router) {\r\n  " +
                    "      super(");
            
            #line 54 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service, route, router);\r\n    }\r\n\r\n    subscribeServices(): void {\r\n\t");
            
            #line 58 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 for (int i = 0; i < serviceProperties.Count(); i++)
	{ 
		var serviceProperty = serviceProperties[i];
		var typeName = extractTypeName(serviceProperty); 
            
            #line default
            #line hidden
            this.Write("\t\tthis.");
            
            #line 62 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service.getList().then(list => {\r\n\t\t\tthis.");
            
            #line 63 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List = list.Items;\r\n\t\t\tif (this.model.");
            
            #line 64 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(serviceProperty.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t\t\tthis.model.");
            
            #line 65 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(serviceProperty.Name));
            
            #line default
            #line hidden
            this.Write(" = this.");
            
            #line 65 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List.filter(c => c.Id === this.model.");
            
            #line 65 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(serviceProperty.Name));
            
            #line default
            #line hidden
            this.Write(".Id)[0];\r\n\t\t});\r\n\t");
            
            #line 67 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 68 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 
	foreach(var relationProperty in relationProperties)
	{ 
            
            #line default
            #line hidden
            this.Write("\t\tthis.");
            
            #line 71 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationProperty.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service.getList().then(list => {\r\n\t\t\tthis.");
            
            #line 72 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationProperty.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List = list.Items;\r\n\t\t});\r\n\t");
            
            #line 74 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                \r\n\t");
            
            #line 76 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 foreach (var pp in parametreProperties)
	{ 
            
            #line default
            #line hidden
            this.Write("\t\tthis.parametreService.getList(\'");
            
            #line 78 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Value));
            
            #line default
            #line hidden
            this.Write("\').then(list => {\r\n\t\t\tthis.");
            
            #line 79 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List = list.Items;\r\n\t\t\tif (this.model.");
            
            #line 80 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Key));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t\t\tthis.model.");
            
            #line 81 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Key));
            
            #line default
            #line hidden
            this.Write(" = this.");
            
            #line 81 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List.filter(c => c.Id === this.model.");
            
            #line 81 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pp.Key));
            
            #line default
            #line hidden
            this.Write(".Id)[0];\r\n\t\t});\r\n\t");
            
            #line 83 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                \r\n\t");
            
            #line 85 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 for (int i = 0; i < enumProperties.Count(); i++)
	{ 
		var enumProperty = enumProperties[i];
		var typeName = enumProperty.Name; 
            
            #line default
            #line hidden
            this.Write("\t\tthis.");
            
            #line 89 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(extractTypeName(enumProperty).ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List = this.");
            
            #line 89 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(extractTypeName(enumProperty).ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service.getList();\r\n\t");
            
            #line 90 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    goBack(): void {\r\n        this.router.navigate([\'/app/");
            
            #line 94 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleName));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 94 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("list\']);\r\n    }\r\n\r\n\t");
            
            #line 97 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 foreach (var item in relationProperties)
    { 
            
            #line default
            #line hidden
            this.Write("    add");
            
            #line 99 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write("(id) {\r\n        var ");
            
            #line 100 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write(" = this.");
            
            #line 100 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("List.filter(c => c.Id == id)[0];\r\n        if (this.model.");
            
            #line 101 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write(" === null) {\r\n            this.model.");
            
            #line 102 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write(" = [];\r\n        }\r\n        if (");
            
            #line 104 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write(") {\r\n            this.model.");
            
            #line 105 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write(".push(");
            
            #line 105 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Key.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write(");\r\n        }\r\n    }\r\n    \r\n    remove");
            
            #line 109 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write("(id) {\r\n\t\tvar index = this.model.");
            
            #line 110 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write(".findIndex(c => c.Id == id);\r\n\t\tif (index !== -1) {\r\n            this.model.");
            
            #line 112 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Value));
            
            #line default
            #line hidden
            this.Write(".splice(index, 1);\r\n        }\r\n    }\r\n    ");
            
            #line 115 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n    getModelValue(params: Params): Promise<void|");
            
            #line 117 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("> {\r\n        if (params[\'id\'])\r\n        {\r\n            this.upsertText = \'Edit ");
            
            #line 120 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(title));
            
            #line default
            #line hidden
            this.Write("\';\r\n            return this.");
            
            #line 121 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false))));
            
            #line default
            #line hidden
            this.Write("Service.get(+params[\'id\'])\r\n                .catch(err => {\r\n                    " +
                    "this.router.navigate([\'/notfound\']);       \r\n                });\r\n        }\r\n   " +
                    "     else {\r\n            this.upsertText = \'New ");
            
            #line 127 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(title));
            
            #line default
            #line hidden
            this.Write("\';\r\n            let m: ");
            
            #line 128 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write(" = this.getInitialValue();;\r\n            let p: Promise<");
            
            #line 129 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write("> = new Promise((resolve, reject) => resolve(m));\r\n            return p;\r\n       " +
                    " }\r\n    }\r\n\r\n    getInitialValue(): ");
            
            #line 134 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Name));
            
            #line default
            #line hidden
            this.Write(" {\r\n        return {\r\n\t\t");
            
            #line 136 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 for(int i = 0; i < properties.Count(); i++)
		{ 
		PropertyInfo pi = properties[i]; 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 if (pi.PropertyType == typeof(int)) { 
            
            #line default
            #line hidden
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pi.Name));
            
            #line default
            #line hidden
            this.Write(": 0");
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pi.Name));
            
            #line default
            #line hidden
            this.Write(": null");
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 139 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i < properties.Count() - 1 ? "," : ""));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 140 "C:\Projects\focus\Generator\UIGenerator\Templates\EditComponentTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t};\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class EditComponentTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
