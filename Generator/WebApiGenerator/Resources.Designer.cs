//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiGenerator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebApiGenerator.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.ComponentModel.DataAnnotations;
        ///using Newtonsoft.Json;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    public class CreateUserBindingModel
        ///    {
        ///        [Required]
        ///        [EmailAddress]
        ///        [Display(Name = &quot;Email&quot;)]
        ///        public string Email { get; set; }
        ///
        ///        [Required]
        ///        [Display(Name = &quot;Username&quot;)]
        ///        public string Username { get; set; }
        ///
        ///        [Required]
        ///        [Display(Name = &quot;First Name&quot;)]
        ///        public string FirstName { get; set; }
        ///
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccountBindingModels {
            get {
                return ResourceManager.GetString("AccountBindingModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using Microsoft.AspNet.Identity;
        ///using Microsoft.AspNet.Identity.EntityFramework;
        ///using Microsoft.AspNet.Identity.Owin;
        ///using Microsoft.Owin.Security;
        ///using Microsoft.Owin.Security.Cookies;
        ///using #projectname#.Models;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Net.Http;
        ///using System.Security.Claims;
        ///using System.Security.Cryptography;
        ///using System.Threading.Tasks;
        ///using System.Web;
        ///using System.Web.Http;
        ///
        ///namespace #projectname#.Controllers
        ///{
        ///    [Auth [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccountController {
            get {
                return ResourceManager.GetString("AccountController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    // Models returned by AccountController actions.
        ///
        ///    public class ExternalLoginViewModel
        ///    {
        ///        public string Name { get; set; }
        ///
        ///        public string Url { get; set; }
        ///
        ///        public string State { get; set; }
        ///    }
        ///
        ///    public class ManageInfoViewModel
        ///    {
        ///        public string LocalLoginProvider { get; set; }
        ///
        ///        public string Email { get; set; }
        ///
        ///        public IEnumerable&lt;UserLog [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccountViewModels {
            get {
                return ResourceManager.GetString("AccountViewModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;configuration&gt;
        ///  &lt;connectionStrings&gt;
        ///    &lt;add name=&quot;#projectname#&quot; connectionString=&quot;Data Source=.;Initial Catalog=#projectname#;Integrated Security=True&quot; providerName=&quot;System.Data.SqlClient&quot; /&gt;
        ///  &lt;/connectionStrings&gt;
        ///  &lt;configSections&gt;
        ///    &lt;section name=&quot;entityFramework&quot; type=&quot;System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot; requirePermission=&quot;false&quot; /&gt;
        ///  &lt;/config [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AppDataAccess {
            get {
                return ResourceManager.GetString("AppDataAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNet.Identity;
        ///using Microsoft.AspNet.Identity.EntityFramework;
        ///using Microsoft.AspNet.Identity.Owin;
        ///using Microsoft.Owin;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    public class ApplicationRoleManager : RoleManager&lt;IdentityRole&gt;
        ///    {
        ///        public ApplicationRoleManager(IRoleStore&lt;IdentityRole, string&gt; roleStore)
        ///            : base(roleStore)
        ///        {
        ///        }
        ///
        ///        public static ApplicationRoleManager Create(IdentityFactoryOptions&lt;ApplicationRoleManager&gt; options, IOwinCo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApplicationRoleManager {
            get {
                return ResourceManager.GetString("ApplicationRoleManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;#projectname#&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;#projectname#&quot;)]
        ///[assembly: Assem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssemblyInfo {
            get {
                return ResourceManager.GetString("AssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following 
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;#projectname#.Business&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;#projectname#.Business&quot;) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssemblyInfoBusiness {
            get {
                return ResourceManager.GetString("AssemblyInfoBusiness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following 
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;#projectname#.Contracts&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;#projectname#.Contracts [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssemblyInfoContracts {
            get {
                return ResourceManager.GetString("AssemblyInfoContracts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following 
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;#projectname#.DataAccess&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;&quot;)]
        ///[assembly: AssemblyProduct(&quot;#projectname#.DataAcce [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssemblyInfoDataAccess {
            get {
                return ResourceManager.GetString("AssemblyInfoDataAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Common;
        ///using #projectname#.Contracts.Business;
        ///using #projectname#.Contracts.DataAccess;
        ///using Focus.Common;
        ///using System.Linq;
        ///
        ///namespace #projectname#.Business
        ///{
        ///    public class BaseBusiness&lt;T&gt; : IBaseBusiness&lt;T&gt; where T : BaseModel
        ///    {
        ///        protected IBaseData&lt;T&gt; _data;
        ///
        ///        public BaseBusiness(IBaseData&lt;T&gt; data) =&gt; this._data = data;
        ///
        ///        public virtual ResponseResult Create(T model)
        ///        {
        ///            _data.Create(model);
        ///
        ///            return new R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseBusiness {
            get {
                return ResourceManager.GetString("BaseBusiness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using Focus.Common.Pagination;
        ///using #projectname#.Filters;
        ///using #projectname#.Helpers;
        ///using #projectname#.Contracts.Business;
        ///using System;
        ///using System.Linq;
        ///using System.Web.Http;
        ///
        ///
        ///namespace #projectname#.Controllers
        ///{
        ///    public abstract class BaseController&lt;TBusiness, TModel&gt; : ApiController where TBusiness : IBaseBusiness&lt;TModel&gt;
        ///    {
        ///        protected TBusiness business;
        ///
        ///
        ///        public BaseController(TBusiness business)
        ///        {
        ///            this.business  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseController {
            get {
                return ResourceManager.GetString("BaseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Contracts.DataAccess;
        ///using Focus.Common;
        ///using System;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///namespace #projectname#.DataAccess.Data
        ///{
        ///    public class BaseData&lt;T&gt; : IBaseData&lt;T&gt; where T : BaseModel
        ///    {
        ///        protected IUnitOfWork _uow;
        ///
        ///        public BaseData(IUnitOfWork uow) =&gt; _uow = uow;
        ///
        ///        public void Create(T model)
        ///        {
        ///            model.CreatedDate = DateTime.Now;
        ///
        ///            _uow.GetRepository&lt;T&gt;().Add(model);
        ///            _uow.Sa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseData {
            get {
                return ResourceManager.GetString("BaseData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Web;
        ///using System.Web.Optimization;
        ///
        ///namespace #projectname#
        ///{
        ///    public class BundleConfig
        ///    {
        ///        // For more information on bundling, visit http://go.microsoft.com/fwlink/?LinkId=301862
        ///        public static void RegisterBundles(BundleCollection bundles)
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string BundleConfig {
            get {
                return ResourceManager.GetString("BundleConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Net;
        ///using System.Net.Http;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using System.Web.Http;
        ///
        ///namespace #projectname#.Results
        ///{
        ///    public class ChallengeResult : IHttpActionResult
        ///    {
        ///        public ChallengeResult(string loginProvider, ApiController controller)
        ///        {
        ///            LoginProvider = loginProvider;
        ///            Request = controller.Request;
        ///        }
        ///
        ///        public string LoginPr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChallengeResult {
            get {
                return ResourceManager.GetString("ChallengeResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Net;
        ///using System.Net.Http;
        ///using System.Security.Claims;
        ///using System.Threading.Tasks;
        ///using System.Web.Http.Controllers;
        ///using System.Web.Http.Filters;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class ClaimsAuthorizationAttribute : AuthorizationFilterAttribute
        ///    {
        ///        public string ClaimType { get; set; }
        ///        public string ClaimValue { get; set; }
        ///
        ///        public override Task OnAuthorizationAsync(HttpActionContext actionContext, System.Threading.CancellationToken c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClaimsAuthorizationAttribute {
            get {
                return ResourceManager.GetString("ClaimsAuthorizationAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Web;
        ///using System.Web.Mvc;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class CustomAuthorizeAttribute : AuthorizeAttribute
        ///    {
        ///        public CustomAuthorizeAttribute()
        ///        {
        ///            Roles = &quot;Admin&quot;;
        ///        }
        ///
        ///        public override void OnAuthorization(AuthorizationContext filterContext)
        ///        {
        ///            base.OnAuthorization(filterContext);
        ///            if (filterContext.Result is HttpUnautho [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CustomAuthorizeAttribute {
            get {
                return ResourceManager.GetString("CustomAuthorizeAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.Owin.Security;
        ///using Microsoft.Owin.Security.DataHandler.Encoder;
        ///using System;
        ///using System.Configuration;
        ///using System.IdentityModel.Tokens;
        ///using Thinktecture.IdentityModel.Tokens;
        ///
        ///namespace #projectname#.Providers
        ///{
        ///    public class CustomJwtFormat : ISecureDataFormat&lt;AuthenticationTicket&gt;
        ///    {
        ///
        ///        private readonly string _issuer = string.Empty;
        ///
        ///        public CustomJwtFormat(string issuer)
        ///        {
        ///            _issuer = issuer;
        ///        }
        ///
        ///        public strin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CustomJwtFormat {
            get {
                return ResourceManager.GetString("CustomJwtFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Models;
        ///using Microsoft.AspNet.Identity.Owin;
        ///using Microsoft.Owin.Security;
        ///using Microsoft.Owin.Security.Cookies;
        ///using Microsoft.Owin.Security.OAuth;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Security.Claims;
        ///using System.Threading.Tasks;
        ///
        ///namespace #projectname#.Providers
        ///{
        ///    public class CustomOAuthProvider : OAuthAuthorizationServerProvider
        ///    {
        ///
        ///        public override Task ValidateClientAuthentication(OAuthValidateClientAuthenticationCont [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CustomOAuthProvider {
            get {
                return ResourceManager.GetString("CustomOAuthProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using System;
        ///
        ///namespace #projectname#.DataAccess.Repositories
        ///{
        ///    public class EFRepository&lt;T&gt; : EFRepositoryBase&lt;T&gt; where T : BaseModel
        ///    {
        ///        public EFRepository(#projectname#Context dbContext)
        ///        {
        ///            _dbContext = dbContext ?? throw new ArgumentNullException(&quot;dbContext can not be null.&quot;);
        ///            _dbSet = dbContext.Set&lt;T&gt;();
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string EFRepository {
            get {
                return ResourceManager.GetString("EFRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Contracts.DataAccess;
        ///using Focus.Common;
        ///using System;
        ///using System.Data.Entity;
        ///using System.Data.Entity.Migrations;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///namespace #projectname#.DataAccess.Repositories
        ///{
        ///    public abstract class EFRepositoryBase&lt;T&gt; : IRepository&lt;T&gt; where T : BaseModel
        ///    {
        ///        protected DbContext _dbContext;
        ///        protected DbSet&lt;T&gt; _dbSet;
        ///
        ///        #region IRepository Members
        ///        public virtual IQueryable&lt;T&gt; GetAll() =&gt; _dbSet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EFRepositoryBase {
            get {
                return ResourceManager.GetString("EFRepositoryBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Contracts.DataAccess;
        ///using #projectname#.DataAccess.Repositories;
        ///using System;
        ///using System.Data.Entity;
        ///using System.Linq;
        ///using System.Reflection;
        ///
        ///namespace #projectname#.DataAccess.UnitOfWork
        ///{
        ///    public class EFUnitOfWork : EFUnitOfWorkBase
        ///    {
        ///        public EFUnitOfWork(#projectname#Context dbContext)
        ///        {
        ///            Database.SetInitializer &lt;#projectname#Context&gt;(null);
        ///            _dbContext = dbContext ?? throw new ArgumentNullException(&quot;dbContext can no [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EFUnitOfWork {
            get {
                return ResourceManager.GetString("EFUnitOfWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Contracts.DataAccess;
        ///using Focus.Common;
        ///using System;
        ///using System.Data.Entity;
        ///
        ///namespace #projectname#.DataAccess.UnitOfWork
        ///{
        ///    public abstract class EFUnitOfWorkBase : IUnitOfWork
        ///    {
        ///        public DbContext _dbContext;
        ///
        ///        #region IUnitOfWork Members
        ///        public abstract IRepository&lt;T&gt; GetRepository&lt;T&gt;() where T : BaseModel;
        ///
        ///        public int SaveChanges()
        ///        {
        ///            try
        ///            {
        ///                return _dbContext.SaveChanges();
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EFUnitOfWorkBase {
            get {
                return ResourceManager.GetString("EFUnitOfWorkBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNet.Identity;
        ///using SendGrid;
        ///using System.Configuration;
        ///using System.Net;
        ///using System.Threading.Tasks;
        ///
        ///namespace #projectname#.Services
        ///{
        ///    public class EmailService : IIdentityMessageService
        ///    {
        ///        public async Task SendAsync(IdentityMessage message)
        ///        {
        ///            await configSendGridasync(message);
        ///        }
        ///
        ///        // Use NuGet to install SendGrid (Basic C# client lib) 
        ///        private async Task configSendGridasync(IdentityMessage message)
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmailService {
            get {
                return ResourceManager.GetString("EmailService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Web;
        ///using System.Web.Mvc;
        ///
        ///namespace #projectname#
        ///{
        ///    public class FilterConfig
        ///    {
        ///        public static void RegisterGlobalFilters(GlobalFilterCollection filters)
        ///        {
        ///            filters.Add(new HandleErrorAttribute());
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string FilterConfig {
            get {
                return ResourceManager.GetString("FilterConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;%@ Application Codebehind=&quot;Global.asax.cs&quot; Inherits=&quot;#projectname#.WebApiApplication&quot; Language=&quot;C#&quot; %&gt;
        ///.
        /// </summary>
        internal static string Global {
            get {
                return ResourceManager.GetString("Global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Common;
        ///using Focus.Common;
        ///using System.Linq;
        ///
        ///namespace #projectname#.Contracts.Business
        ///{
        ///    public interface IBaseBusiness&lt;T&gt;
        ///    {
        ///        IQueryable&lt;T&gt; GetAll();
        ///        T Get(int id);
        ///        ResponseResult Update(T model);
        ///        ResponseResult Create(T model);
        ///        ResponseResult Delete(int id);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IBaseBusiness {
            get {
                return ResourceManager.GetString("IBaseBusiness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Common;
        ///using Focus.Common;
        ///using System;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///namespace #projectname#.Contracts.DataAccess
        ///{
        ///    public interface IBaseData&lt;T&gt; where T : BaseModel
        ///    {
        ///        IQueryable&lt;T&gt; GetAll();
        ///        IQueryable&lt;T&gt; GetAll(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///        T Get(int id);
        ///        T Get(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///        void Update(T model);
        ///        void Create(T model);
        ///        void Delete(int id);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IBaseData {
            get {
                return ResourceManager.GetString("IBaseData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Models;
        ///using Microsoft.AspNet.Identity;
        ///using Microsoft.AspNet.Identity.EntityFramework;
        ///using Microsoft.AspNet.Identity.Owin;
        ///using Microsoft.Owin;
        ///using System;
        ///
        ///namespace #projectname#
        ///{
        ///    // Configure the application user manager used in this application. UserManager is defined in ASP.NET Identity and is used by the application.
        ///
        ///    public class ApplicationUserManager : UserManager&lt;ApplicationUser&gt;
        ///    {
        ///        public ApplicationUserManager(IUserStore&lt;ApplicationUse [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IdentityConfig {
            get {
                return ResourceManager.GetString("IdentityConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNet.Identity;
        ///using Microsoft.AspNet.Identity.EntityFramework;
        ///using System;
        ///using System.ComponentModel.DataAnnotations;
        ///using System.Security.Claims;
        ///using System.Threading.Tasks;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    // You can add profile data for the user by adding more properties to your ApplicationUser class, please visit http://go.microsoft.com/fwlink/?LinkID=317594 to learn more.
        ///    public class ApplicationUser : IdentityUser
        ///    {
        ///        //[Required]
        ///        //[Ma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IdentityModels {
            get {
                return ResourceManager.GetString("IdentityModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///
        ///namespace #projectname#.Contracts.DataAccess
        ///{
        ///    public interface IRepository&lt;T&gt; where T : class
        ///    {
        ///        IQueryable&lt;T&gt; GetAll();
        ///        IQueryable&lt;T&gt; GetAll(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///        T GetById(int id);
        ///        T Get(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///
        ///        void Add(T entity);
        ///        void Update(T entity);
        ///        void Delete(T entity);
        ///        void Delete(int id);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IRepository {
            get {
                return ResourceManager.GetString("IRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using #projectname#.Common;
        ///using Focus.Common;
        ///using System;
        ///
        ///namespace #projectname#.Contracts.DataAccess
        ///{
        ///    public interface IUnitOfWork : IDisposable
        ///    {
        ///        IRepository&lt;T&gt; GetRepository&lt;T&gt;() where T : BaseModel;
        ///        int SaveChanges();
        ///        object DbContext { get; }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IUnitOfWork {
            get {
                return ResourceManager.GetString("IUnitOfWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Web.Http.Filters;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class LogActionFilter : ActionFilterAttribute
        ///    {
        ///        public override void OnActionExecuted(HttpActionExecutedContext actionExecutedContext)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string LogActionFilter {
            get {
                return ResourceManager.GetString("LogActionFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Web.Http.Filters;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class LogExceptionFilterAttribute : ExceptionFilterAttribute
        ///    {
        ///        public override void OnException(HttpActionExecutedContext context)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string LogExceptionFilterAttribute {
            get {
                return ResourceManager.GetString("LogExceptionFilterAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Runtime.Caching;
        ///
        ///namespace #projectname#.Helpers
        ///{
        ///    public class MemoryCacheManager
        ///    {
        ///        ObjectCache cache;
        ///
        ///        public MemoryCacheManager()
        ///        {
        ///            cache = MemoryCache.Default;
        ///        }
        ///
        ///        public void Add&lt;T&gt;(string key, T source)
        ///        {
        ///            var policy = new CacheItemPolicy { AbsoluteExpiration = DateTimeOffset.Now.AddMinutes(60) };
        ///            cache.Add(key, source, policy);
        ///        }
        ///
        ///        public bool Contai [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MemoryCacheManager {
            get {
                return ResourceManager.GetString("MemoryCacheManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNet.Identity.EntityFramework;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Net.Http;
        ///using System.Web;
        ///using System.Web.Http.Routing;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    public class ModelFactory
        ///    {
        ///
        ///        private UrlHelper _UrlHelper;
        ///        private ApplicationUserManager _AppUserManager;
        ///
        ///        public ModelFactory(HttpRequestMessage request, ApplicationUserManager appUserManager)
        ///        {
        ///            _UrlHelper = new UrlHel [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ModelFactory {
            get {
                return ResourceManager.GetString("ModelFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;packages&gt;
        ///  &lt;package id=&quot;Antlr&quot; version=&quot;3.4.1.9004&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;Autofac&quot; version=&quot;4.6.2&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;Autofac.WebApi2&quot; version=&quot;4.1.0&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;Bogus&quot; version=&quot;25.0.1&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;bootstrap&quot; version=&quot;3.0.0&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;EntityFramework&quot; version=&quot;6.2.0&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;EntityFramework.E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string packages {
            get {
                return ResourceManager.GetString("packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;packages&gt;
        ///  &lt;package id=&quot;Newtonsoft.Json&quot; version=&quot;11.0.1&quot; targetFramework=&quot;net45&quot; /&gt;
        ///&lt;/packages&gt;.
        /// </summary>
        internal static string packagesBusiness {
            get {
                return ResourceManager.GetString("packagesBusiness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;packages&gt;
        ///  &lt;package id=&quot;EntityFramework&quot; version=&quot;6.2.0&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;Newtonsoft.Json&quot; version=&quot;11.0.1&quot; targetFramework=&quot;net45&quot; /&gt;
        ///  &lt;package id=&quot;System.Runtime.InteropServices.RuntimeInformation&quot; version=&quot;4.0.0&quot; targetFramework=&quot;net45&quot; /&gt;
        ///&lt;/packages&gt;.
        /// </summary>
        internal static string packagesDataAccess {
            get {
                return ResourceManager.GetString("packagesDataAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using Focus.Common.Attributes;
        ///using System;
        ///using System.Linq;
        ///using System.Linq.Dynamic;
        ///using System.Reflection;
        ///
        ///namespace #projectname#.Helpers
        ///{
        ///    public static class ReflectionExtensions
        ///    {
        ///        public static IQueryable&lt;TEntity&gt; OrderBy&lt;TEntity&gt;(this IQueryable&lt;TEntity&gt; source, string orderByProperty, bool desc)
        ///        {
        ///            var type = typeof(TEntity);
        ///
        ///            var property = type.GetProperty(orderByProperty);
        ///            if (property != null &amp; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReflectionExtensions {
            get {
                return ResourceManager.GetString("ReflectionExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.ComponentModel.DataAnnotations;
        ///
        ///namespace #projectname#.Models
        ///{
        ///    public class CreateRoleBindingModel
        ///    {
        ///        public string Id { get; set; }
        ///
        ///        [Required]
        ///        [StringLength(256, ErrorMessage = &quot;The {0} must be at least {2} characters long.&quot;, MinimumLength = 2)]
        ///        [Display(Name = &quot;Role Name&quot;)]
        ///        public string Name { get; set; }
        ///    }
        ///
        ///    public class UsersInRoleModel
        ///    {
        ///        public string Id { get; set; }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Role {
            get {
                return ResourceManager.GetString("Role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Web;
        ///using System.Web.Mvc;
        ///using System.Web.Routing;
        ///
        ///namespace #projectname#
        ///{
        ///    public class RouteConfig
        ///    {
        ///        public static void RegisterRoutes(RouteCollection routes)
        ///        {
        ///            routes.IgnoreRoute(&quot;{resource}.axd/{*pathInfo}&quot;);
        ///
        ///            routes.MapRoute(
        ///                name: &quot;Default&quot;,
        ///                url: &quot;{controller}/{action}/{id}&quot;,
        ///                defaults: new { controller = &quot;H [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RouteConfig {
            get {
                return ResourceManager.GetString("RouteConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] SolutionFile {
            get {
                object obj = ResourceManager.GetObject("SolutionFile", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.Owin;
        ///using Microsoft.Owin.Security;
        ///using Microsoft.Owin.Security.DataHandler.Encoder;
        ///using Microsoft.Owin.Security.Jwt;
        ///using Owin;
        ///using System.Configuration;
        ///
        ///[assembly: OwinStartup(typeof(#projectname#.Startup))]
        ///
        ///namespace #projectname#
        ///{
        ///    public partial class Startup
        ///    {
        ///        public void Configuration(IAppBuilder app)
        ///        {
        ///            ConfigureAuth(app);
        ///
        ///            ConfigureOAuthTokenConsumption(app);
        ///        }
        ///
        ///        private void ConfigureOAuthTo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Startup {
            get {
                return ResourceManager.GetString("Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Microsoft.AspNet.Identity;
        ///using Microsoft.Owin;
        ///using Microsoft.Owin.Security.Cookies;
        ///using Microsoft.Owin.Security.OAuth;
        ///using #projectname#.Models;
        ///using #projectname#.Providers;
        ///using Owin;
        ///using System;
        ///
        ///namespace #projectname#
        ///{
        ///    public partial class Startup
        ///    {
        ///        public static OAuthAuthorizationServerOptions OAuthOptions { get; private set; }
        ///
        ///        public static string PublicClientId { get; private set; }
        ///
        ///        // For more information on configuring authentic [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Startup_Auth {
            get {
                return ResourceManager.GetString("Startup_Auth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using Focus.Common.Attributes;
        ///using System.Collections;
        ///using System.ComponentModel.DataAnnotations;
        ///using System.ComponentModel.DataAnnotations.Schema;
        ///using System.Linq;
        ///using System.Reflection;
        ///using System.Web.Http.Controllers;
        ///using System.Web.Http.Filters;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class UpdateFKAttribute : ActionFilterAttribute
        ///    {
        ///        public override void OnActionExecuting(HttpActionContext actionContext)
        ///        {
        ///            if (action [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateFKAttribute {
            get {
                return ResourceManager.GetString("UpdateFKAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Focus.Common;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Net;
        ///using System.Net.Http;
        ///using System.Web.Http.Controllers;
        ///using System.Web.Http.Filters;
        ///
        ///namespace #projectname#.Filters
        ///{
        ///    public class ValidateModelAttribute : ActionFilterAttribute
        ///    {
        ///        public override void OnActionExecuting(HttpActionContext actionContext)
        ///        {
        ///            if (actionContext.ModelState.IsValid == false)
        ///            {
        ///                List&lt;string&gt; mess [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ValidateModelAttribute {
            get {
                return ResourceManager.GetString("ValidateModelAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;configuration&gt;
        ///  &lt;configSections&gt;
        ///    &lt;section name=&quot;entityFramework&quot; type=&quot;System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot; requirePermission=&quot;false&quot; /&gt;
        ///  &lt;/configSections&gt;
        ///  &lt;connectionStrings&gt;
        ///    &lt;add name=&quot;#projectname#&quot; connectionString=&quot;Data Source=.;Initial Catalog=#projectname#;Integrated Security=True&quot; providerName=&quot;System.Data.SqlClient&quot; /&gt;
        ///    &lt;add name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Web {
            get {
                return ResourceManager.GetString("Web", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Web.Http;
        ///using System.Web.Http.Cors;
        ///
        ///using #projectname#.Filters;
        ///using Microsoft.Owin.Security.OAuth;
        ///
        ///namespace #projectname#
        ///{
        ///    public static class WebApiConfig
        ///    {
        ///        public static void Register(HttpConfiguration config)
        ///        {
        ///            config.SuppressDefaultHostAuthentication();
        ///            config.Filters.Add(new HostAuthenticationFilter(OAuthDefaults.AuthenticationType));
        ///
        ///            config.MapHttpAttributeRoutes();
        ///
        ///            var cors = new EnableCor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WebApiConfig {
            get {
                return ResourceManager.GetString("WebApiConfig", resourceCulture);
            }
        }
    }
}
