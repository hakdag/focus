<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
import { Injectable }   from '@angular/core';
import { Headers, Http } from '@angular/http';
import { <#= type.Name #> }         from './<#= type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>';
import { AppConfig } from '../../app.config';
import { BaseService } from 'app/core/BaseService';

@Injectable()
export class <#= type.Name #>Service extends BaseService<<#= type.Name #>> {
    
    constructor(protected http: Http, config: AppConfig) {
        super(http);
        var cfg: any = config.getConfig();
        this.apiUrl = cfg.service.rootUrl + 'api/<#= moduleName #>/<#= type.Name.ToLower(new System.Globalization.CultureInfo("en-EN", false)) #>';
    }

    get(id: number): Promise<<#= type.Name #>> {
        const url = `${this.apiUrl}/${id}`;
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(response => {
                var json = response.json();
                var model = json as <#= type.Name #>;

				<# for(int i = 0; i < datetimeProperties.Length; i++)
				{
				PropertyInfo pi = datetimeProperties[i]; #>
                model.<#= pi.Name #> = new Date(json.<#= pi.Name #>);
				<# } #>

                return model;
            })
            .catch(super.handleError);
    }
}